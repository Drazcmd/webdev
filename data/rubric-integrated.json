[
{"section":"Merits", "items": [
    {"item":"README.txt file with netid, frontend and backend URLs", "pts": 5 },
    {"item":"sample content (different than logged-in content) is accessible from landing page for non-logged in users, at least 3 posts", "pts": 5},
    {"item":"Can register a new user", "pts": 5 },
    {"item":"Can log in as the new user", "pts": 7 },
    {"item":"Can logout but then required to login again to view non-sample content", "pts": 5},
    {"item":"At least 10 preloaded posts exist, as seen from your test user", "pts": 5},
    {"item":"At least 3 preloaded comments exist, as seen from your test user", "pts": 5},
    {"item":"New posts appear at top of feed with submission timestamp", "pts": 7 },
    {"item":"New posts are persistent to log off and refresh", "pts": 7 },
    {"item":"One post is returned by GET /posts/:id if a valid id is supplied", "pts": 10 },
    {"item":"User passwords are salted and hashed using md5 or encrypted with bcrypt", "pts": 10},
    {"item":"Session handling is manually implemented, session id is stored as a httpOnly lient cookie", "pts":  7 },
    {"item":"Enabled CORS correctly", "pts": 7 },
    {"item":"Stubs exist for all endpoints", "pts": 10},
    {"item":"JavaScript source is appropriately divided into separate files by component", "pts": 5}
]},
{"section":"Demerits", "items": [

    {"item":"code smells bad or has some issue", "pts": 10},
    {"item":"sections of code repeated more than twice (i.e., it's not DRY code)", "pts": 10},
    {"item":"variable not appropriately scoped (i.e., missing var, or var in wrong scope)", "pts": 10},
    {"item":"fat Angular Controller", "pts":10},
    {"item":"did not properly separate concerns", "pts": 10},
    {"item":"user interface not obvious to use", "pts": 10},
    {"item":"a non-server error is thrown", "pts": 8},
    {"item":"lingering console message", "pts": 5},
    {"item":"bad variable name", "pts": 5},

    {"item":"bad datastructure choice or usage", "pts": 5},
    {"item":"inappropriate use of new", "pts": 5},
    {"item":"improper use of comments", "pts": 5},
    {"item":"no comments at all (you should have describing comments to explain why you are doing things the way you are doing them)", "pts": 5},
    {"item":"dead code, e.g., commented or unreachable code", "pts": 5},
    {"item":"code makes unchecked assumption", "pts": 5},
    {"item":"non-CSS styling", "pts": 5},

    {"item":"inefficient algorithm", "pts": 5},
    {"item":"poor implementation", "pts": 5},
    {"item":"expensive network load", "pts": 5},
    {"item":"JavaScript file has too many lines of code (more than about 500 lines)", "pts": 5},
    {"item":"JavaScript file inappropriately has too few lines of code (should be at least 5 lines otherwise combine with another file)", "pts": 5},
    {"item":"function length is too long (more than about 60 lines)", "pts": 5},
    {"item":"function performs too many functions", "pts": 5},
    {"item":"complex code statement (should be broken up or is missing appropriate comment)", "pts": 5},

    {"item":"unnecessary intermixing of content (HTML) and style (CSS)", "pts": 5},
    {"item":"unnecessary intermixing of content (HTML) and logic (JavaScript)", "pts": 5},

    {"item":"inappropriate magic value", "pts": 3},
    {"item":"missing braces for blocks, e.g., if, for, while", "pts": 3},
    {"item":"bad indentation", "pts": 3},

    {"item":"poorly named function", "pts": 3},
    {"item":"missing cached variable, e.g., not caching DOM lookup", "pts": 3},
    {"item":"reassigning or multiply assigning variables", "pts": 3},
    {"item":"code line length too long (more than about 80 characters)", "pts": 3},
    {"item":"too much white space (use white space for logical separations and promote grouping)", "pts": 3},
    {"item":"excessive use of DOM ids", "pts": 3},
    {"item":"missing clear abstraction usage opportunity", "pts": 3},

    {"item":"for loop used instead of more appropriate functional style", "pts": 3},
    {"item":"variable not appropriately initialized", "pts": 3},
    {"item":"did not use shortcut for boolean, i.e., if (bool == true) should be if (bool)", "pts": 3},
    {"item":"inappropriate character in filename, e.g., space", "pts": 3},
    {"item":"a 'what' comment, e.g., // set var to 0", "pts": 3},

    {"item":"multi-line comment where // should be used instead", "pts": 1},
    {"item":"long comment at end of line instead of on separate line", "pts": 1}

]}

]
